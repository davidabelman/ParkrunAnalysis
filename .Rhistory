ggplot(age.splits, aes(x=factor(age),
y=count,
fill=Course)) +
geom_bar(stat='identity',
position='dodge',
width=0.8) +
labs(x="Age category", y="Proportion of runners") +
ggtitle("Age split of male runners at both Finsbury Park and Southwark (by %)") +
theme(legend.position = "bottom",
text=element_text(size=16),
axis.text.x = element_text(angle = 90, hjust = 1))
dev.off()
finsbury.results.male
finsbury.results.male$Time
t.test(finsbury.results.male$Time, southwark.results.male$Time, var.equal=TRUE, paired=FALSE)
finsbury.results.male
length(finsbury.results.male)
dim(finsbury.results.male)
t.test(finsbury.results.male$Time,
southwark.results.male$Time,
var.equal=TRUE,
paired=FALSE)
length(finsbury.results.male)
dim(finsbury.results.male)
dim(southwark.results.male)
summary(finsbury.results.male)
summary(southwark.results.male)
boxplot(southwark.results.male$Time)
boxplot(southwark.results.male$Time, finsbury.results.male$Time)
t.test(finsbury.results.male$Runs,
southwark.results.male$Runs,
var.equal=TRUE,
paired=FALSE)
f255.results <- LoadAndCleanParkrunResults(filename = 'Parkrun - F255.csv')
f260.results <- LoadAndCleanParkrunResults(filename = 'Parkrun - F260.csv')
names(f255)
names(f255.results)
?merge
merge(f225.results, f260.results, by='parkrunner')
merge(f255.results, f260.results, by='parkrunner')
merged <- merge(f255.results, f260.results, by='parkrunner')
merged$Time.x - merged$Time.y
sum( merged$Time.x - merged$Time.y)
mean( merged$Time.x - merged$Time.y)
mean( merged$Time.x - merged$Time.y )
t.test (merged$Time.x, merged$Time.y, var.equal=TRUE, paried=FALSE)
t.test (merged$Time.x, merged$Time.y, var.equal=TRUE, paried=TRUE)
t.test (merged$Time.x, merged$Time.y, var.equal=TRUE, paired=TRUE)
t.test (merged$Time.x, merged$Time.y, var.equal=TRUE, paired=FALSE)
f257.results <- LoadAndCleanParkrunResults(filename = 'Parkrun - F257.csv')
f258.results <- LoadAndCleanParkrunResults(filename = 'Parkrun - F258.csv')
merged <- merge(f257.results, f258.results, by='parkrunner')
merged
merged$Time.x - merged$Time.y
t.test (merged$Time.x, merged$Time.y, var.equal=TRUE, paired=TRUE)
dim ( merge(f257.results, f258.results, by='parkrunner') )
dim ( merge(f257.results, f257.results, by='parkrunner') )
dim ( merge(f256.results, f257.results, by='parkrunner') )
f257.results <- LoadAndCleanParkrunResults(filename = 'Parkrun - F257.csv')
f256.results <- LoadAndCleanParkrunResults(filename = 'Parkrun - F256.csv')
dim ( merge(f256.results, f257.results, by='parkrunner') )
dim ( merge(f256.results, f258.results, by='parkrunner') )
dim ( merge(f256.results, f260.results, by='parkrunner') )
merged <- merge(f256.results, f260.results, by='parkrunner')
t.test (merged$Time.x, merged$Time.y, var.equal=TRUE, paired=TRUE)
mean(merged$Time.x)
mean(merged$Time.y)
merged <- merge(f256.results, f260.results, by='parkrunner')
?rbind
s68.results <- LoadAndCleanParkrunResults(filename = 'Parkrun - S68.csv') #20th Dec
s71.results <- LoadAndCleanParkrunResults(filename = 'Parkrun - S71.csv') #3rd Jan
dec20.results <- rbind(f256.results, s68.results)
jan3.results <- rbind(f260.results, s71.results)
merged <- merge(dec20.results, jan3.results, by='parkrunner')
t.test (merged$Time.x, merged$Time.y, var.equal=TRUE, paired=TRUE)
dim (merged)
plot(merged$Time.x, merged$Time.y)
plot(merged$Time.x - merged$Time.y)
merged
length(s68.results)
size(s68.results)
length(s68.results,2)
dim(s68.results)
dim(s68.results)[1]
dim(s68.results) + dim(s71.results) + dim(f256.results) + dim(f260.results)
runner.total <- ( dim(s68.results) + dim(s71.results) + dim(f256.results) + dim(f260.results) )[1]
runner.total
print("Total runners: ", runner.total)
print("Total runners:", runner.total)
paste("Total runners:", runner.total)
f256.results$Course = 'Finsbury Park'
f260.results$Course = 'Finsbury Park'
s68.results$Course = 'Southwark'
s71.results$Course = 'Southwark'
dec20.results <- rbind(f256.results, s68.results)
jan3.results <- rbind(f260.results, s71.results)
jan3.results
joinedByRunner <- merge(dec20.results, jan3.results, by=c('parkrunner','Course'))
joinedByRunner
joinedByRunner[,c('Runs.y')]
joinedByRunner[,c('Time.x', 'Time.y')]
joinedByRunner[,c('Course','Time.x', 'Time.y')]
colnames(joinedByRunner) <- c('Course', '20/12/2014 time', '3/1/2015 time')
joinedByRunner <- joinedByRunner[,c('Course','Time.x', 'Time.y')]
joinedByRunner
f256.results$Course = 'Finsbury Park'
f260.results$Course = 'Finsbury Park'
s68.results$Course = 'Southwark'
s71.results$Course = 'Southwark'
dec20.results <- rbind(f256.results, s68.results)
jan3.results <- rbind(f260.results, s71.results)
joinedByRunner <- merge(dec20.results, jan3.results, by=c('parkrunner','Course'))
joinedByRunner <- joinedByRunner[,c('Course','Time.x', 'Time.y')]
colnames(joinedByRunner) <- c('Course', '20/12/2014 time', '3/1/2015 time')
joinedByRunner
colnames(joinedByRunner) <- c('Course', '20/12/2014.time', '3/1/2015.time')
plot(joinedByRunner$20/12/2014.time, joinedByRunner$3/1/2015.time)
plot(joinedByRunner[,'20/12/2014.time'], joinedByRunner[.'3/1/2015.time'])
colnames(joinedByRunner) <- c('Course', 'Pre Christmas', 'Post Christmas')
colnames(joinedByRunner) <- c('Course', 'Pre.Christmas', 'Post.Christmas')
plot(joinedByRunner$Pre.Christmas, joinedByRunner$Post.Christmas)
plot(joinedByRunner$Pre.Christmas, joinedByRunner$Post.Christmas, col=joinedByRunner$Course)
ggplot(joinedByRunner, aes(x=Pre.Christmas, y=Post.Christmas, color=Course)) +
geom_point(shape=20, size=7) +
labs(x="Pre Christmas (20th Dec)", y="Post Christmas (3rd Jan)") +
ggtitle("Pre and Post Christmas run timings for 5km") +
theme(legend.position = "bottom", text=element_text(size=12))
cor(joinedByRunner)
cor(joinedByRunner$Pre.Christmas, joinedByRunner$Post.Christmas)
f256.results$Course = 'Finsbury Park'
f260.results$Course = 'Finsbury Park'
s68.results$Course = 'Southwark'
s71.results$Course = 'Southwark'
dec20.results <- rbind(f256.results, s68.results)
jan3.results <- rbind(f260.results, s71.results)
joinedByRunner <- merge(dec20.results, jan3.results, by=c('parkrunner','Course'))
joinedByRunner <- joinedByRunner[,c('Course','Time.x', 'Time.y', 'X.x')]
colnames(joinedByRunner) <- c('Course', 'Pre.Christmas', 'Post.Christmas', 'Gender')
ggplot(joinedByRunner, aes(x=Pre.Christmas, y=Post.Christmas, color=Gender)) +
geom_point(shape=20, size=7) +
labs(x="Pre Christmas (20th Dec)", y="Post Christmas (3rd Jan)") +
ggtitle("Pre and Post Christmas run timings for 5km") +
theme(legend.position = "bottom", text=element_text(size=12))
ggplot(joinedByRunner, aes(x=Pre.Christmas, y=Post.Christmas)) +
geom_point(shape=20, size=7) +
labs(x="Pre Christmas (20th Dec)", y="Post Christmas (3rd Jan)") +
ggtitle("Pre and Post Christmas run timings for 5km") +
theme(legend.position = "bottom", text=element_text(size=12))
ggplot(joinedByRunner, aes(x=Pre.Christmas, y=Post.Christmas)) +
geom_point(shape=20, size=7) +
labs(x="Pre Christmas (20th Dec)", y="Post Christmas (3rd Jan)") +
ggtitle("Pre and Post Christmas run timings for 5km") +
theme(legend.position = "bottom", text=element_text(size=12)) +
geom_abline(intercept = 0)
ggplot(joinedByRunner, aes(x=Pre.Christmas, y=Post.Christmas, color=Gender)) +
geom_point(shape=20, size=7) +
labs(x="Pre Christmas (20th Dec)", y="Post Christmas (3rd Jan)") +
ggtitle("Pre and Post Christmas run timings for 5km") +
theme(legend.position = "bottom", text=element_text(size=12)) +
geom_abline(intercept = 0)
ggplot(joinedByRunner, aes(x=Pre.Christmas, y=Post.Christmas, color=Course)) +
geom_point(shape=20, size=7) +
labs(x="Pre Christmas (20th Dec)", y="Post Christmas (3rd Jan)") +
ggtitle("Pre and Post Christmas run timings for 5km") +
theme(legend.position = "bottom", text=element_text(size=12)) +
geom_abline(intercept = 0)
ggplot(joinedByRunner, aes(x=Pre.Christmas, y=Post.Christmas)) +
geom_point(shape=20, size=7) +
labs(x="Pre Christmas (20th Dec)", y="Post Christmas (3rd Jan)") +
ggtitle("Pre and Post Christmas run timings for 5km") +
theme(legend.position = "bottom", text=element_text(size=12)) +
geom_abline(intercept = 0)
joinedByRunner$Improvement <- joinedByRunner$Pre.Christmas - joinedByRunner$Post.Christmas
joinedBy
joinedByRunner
ggplot(joinedByRunner, aes(x=Pre.Christmas, y=Improvement)) +
geom_point(shape=20, size=7) +
labs(x="Pre Christmas time (20th Dec)", y="Improvement in time") +
ggtitle("Pre and Post Christmas run timings for 5km") +
theme(legend.position = "bottom", text=element_text(size=12)) +
geom_abline(intercept = 0)
ggplot(joinedByRunner, aes(x=Pre.Christmas, y=Improvement, color=Improvement)) +
ggplot(joinedByRunner, aes(x=Pre.Christmas, y=Improvement, color=Improvement)) +
geom_point(shape=20, size=7) +
labs(x="Pre Christmas time (20th Dec)", y="Improvement in time") +
ggtitle("Pre and Post Christmas run timings for 5km") +
theme(legend.position = "bottom", text=element_text(size=12)) +
geom_abline(intercept = 0)
ggplot(joinedByRunner, aes(x=Pre.Christmas, y=Improvement, color=Improvement)) +
geom_point(shape=20, size=7) +
labs(x="Pre Christmas time (20th Dec)", y="Improvement in time") +
ggtitle("Pre and Post Christmas run timings for 5km") +
theme(legend.position = "bottom", text=element_text(size=12)) +
geom_abline(intercept = 0)
ggplot(joinedByRunner, aes(x=Pre.Christmas, y=Improvement, color=Course)) +
geom_point(shape=20, size=7) +
labs(x="Pre Christmas time (20th Dec)", y="Improvement in time") +
ggtitle("Pre and Post Christmas run timings for 5km") +
theme(legend.position = "bottom", text=element_text(size=12)) +
geom_abline(intercept = 0)
ggplot(joinedByRunner, aes(x=Pre.Christmas, y=Improvement, color=Gender)) +
geom_point(shape=20, size=7) +
labs(x="Pre Christmas time (20th Dec)", y="Improvement in time") +
ggtitle("Pre and Post Christmas run timings for 5km") +
theme(legend.position = "bottom", text=element_text(size=12)) +
geom_abline(intercept = 0)
ggplot(joinedByRunner, aes(x=Pre.Christmas, y=Improvement, color=Gender)) +
geom_point(shape=20, size=7) +
labs(x="Pre Christmas time (20th Dec)", y="Improvement in time") +
ggtitle("Improvement (or worsening) of run time over Christmas period") +
theme(legend.position = "bottom", text=element_text(size=12)) +
geom_abline(intercept = 0)
ggplot(joinedByRunner, aes(x=Pre.Christmas, y=Improvement, color=Course)) +
geom_point(shape=20, size=7) +
labs(x="Pre Christmas time (20th Dec)", y="Improvement in time") +
ggtitle("Improvement (or worsening) of run time over Christmas period") +
theme(legend.position = "bottom", text=element_text(size=12)) +
geom_abline(intercept = 0)
ggplot(joinedByRunner, aes(x=Pre.Christmas, y=Improvement)) +
geom_point(shape=20, size=7) +
labs(x="Pre Christmas time (20th Dec)", y="Improvement in time") +
ggtitle("Improvement (or worsening) of run time over Christmas period") +
theme(legend.position = "bottom", text=element_text(size=12)) +
geom_abline(intercept = 0)
ggplot(joinedByRunner, aes(x=Pre.Christmas, y=Improvement)) +
geom_point(shape=20, size=7) +
labs(x="Pre Christmas time (20th Dec)", y="Improvement in time") +
ggtitle("Improvement (or worsening) of run time over Christmas period") +
theme(legend.position = "bottom", text=element_text(size=12)) +
geom_abline(intercept = 0)
ggplot(joinedByRunner, aes(x=Pre.Christmas, y=Post.Christmas)) +
geom_point(shape=20, size=7) +
labs(x="Pre Christmas time (20th Dec)", y="Post Christmas time (3rd Jan)") +
ggtitle("Pre and Post Christmas run timings for 5km") +
theme(legend.position = "bottom", text=element_text(size=12)) +
geom_abline(intercept = 0)
# Plot chart of correlation
png("prepost_xmas.png",height=500,width=500)
ggplot(joinedByRunner, aes(x=Pre.Christmas, y=Post.Christmas)) +
geom_point(shape=20, size=7) +
labs(x="Pre Christmas time in minutes (20th Dec)", y="Post Christmas time in minutes (3rd Jan)") +
ggtitle("Pre and Post Christmas run timings for 5km") +
theme(legend.position = "bottom", text=element_text(size=12)) +
geom_abline(intercept = 0)
dev.off()
ggplot(joinedByRunner, aes(x=Pre.Christmas, y=Improvement)) +
geom_point(shape=20, size=7) +
labs(x="Pre Christmas time (20th Dec)", y="Improvement in time") +
ggtitle("Improvement (or worsening) of run time over Christmas period") +
theme(legend.position = "bottom", text=element_text(size=12)) +
geom_abline(intercept = 0)
ggplot(joinedByRunner, aes(x=Pre.Christmas, y=Improvement, color=Course)) +
geom_point(shape=20, size=7) +
labs(x="Pre Christmas time (20th Dec)", y="Improvement in time") +
ggtitle("Improvement (or worsening) of run time over Christmas period") +
theme(legend.position = "bottom", text=element_text(size=12)) +
geom_abline(intercept = 0)
png("prepost_residuals_coursecolor.png",height=550,width=500)
ggplot(joinedByRunner, aes(x=Pre.Christmas, y=Improvement, color=Course)) +
geom_point(shape=20, size=7) +
labs(x="Pre Christmas time (20th Dec)", y="Improvement in time") +
ggtitle("Improvement (or worsening) of run time over Christmas period") +
theme(legend.position = "bottom", text=element_text(size=12)) +
geom_abline(intercept = 0)
dev.off()
png("prepost_residuals.png",height=500,width=500)
ggplot(joinedByRunner, aes(x=Pre.Christmas, y=Improvement)) +
geom_point(shape=20, size=7) +
labs(x="Pre Christmas time (20th Dec)", y="Improvement in time") +
ggtitle("Improvement (or worsening) of run time over Christmas period") +
theme(legend.position = "bottom", text=element_text(size=12)) +
geom_abline(intercept = 0)
dev.off()
t.test(joinedByRunner$Pre.Christmas,
joinedByRunner$Post.Christmas,
var.equal=TRUE,
paired=TRUE)
joinedByRunner$Post.Christmas[joinedByRunner$Course=='Southwark'],
joinedByRunner[joinedByRunner$Course=='Southwark',]$Post.Christmas,
# Paired t-test
t.test(joinedByRunner[joinedByRunner$Course=='Southwark',]$Pre.Christmas,
joinedByRunner[joinedByRunner$Course=='Southwark',]$Post.Christmas,
var.equal=TRUE,
paired=TRUE)
t.test(joinedByRunner[joinedByRunner$Course=='Finsbury',]$Pre.Christmas,
joinedByRunner[joinedByRunner$Course=='Finsbury',]$Post.Christmas,
var.equal=TRUE,
paired=TRUE)
t.test(joinedByRunner[joinedByRunner$Course=='Finsbury Park',]$Pre.Christmas,
joinedByRunner[joinedByRunner$Course=='Finsbury Park',]$Post.Christmas,
var.equal=TRUE,
paired=TRUE)
t.test(joinedByRunner$Pre.Christmas,
joinedByRunner$Post.Christmas,
var.equal=TRUE,
paired=TRUE)
ggplot(joinedByRunner, aes(x=Pre.Christmas, y=Improvement)) +
geom_point(shape=20, size=7) +
labs(x="Pre Christmas time (20th Dec)", y="Improvement in time") +
ggtitle("Improvement (or worsening) of run time over Christmas period") +
theme(legend.position = "bottom", text=element_text(size=12)) +
geom_abline(intercept = 0) +
geom_abline(intercept = 0)
ggplot(joinedByRunner, aes(x=Pre.Christmas, y=Improvement)) +
geom_point(shape=20, size=7) +
labs(x="Pre Christmas time (20th Dec)", y="Improvement in time") +
ggtitle("Improvement (or worsening) of run time over Christmas period") +
theme(legend.position = "bottom", text=element_text(size=12)) +
geom_abline(intercept = 0, slope=0)
png("prepost_residuals.png",height=500,width=500)
ggplot(joinedByRunner, aes(x=Pre.Christmas, y=Improvement)) +
geom_point(shape=20, size=7) +
labs(x="Pre Christmas time (20th Dec)", y="Improvement in time") +
ggtitle("Improvement (or worsening) of run time over Christmas period") +
theme(legend.position = "bottom", text=element_text(size=12)) +
geom_abline(intercept = 0, slope=0)
dev.off()
ggplot(finsbury.results, aes(x=Time, fill=X)) +
geom_density(alpha=0.5) +
labs(x="Run time (minutes)", y="Density") +
scale_fill_discrete(name='Gender', labels=c('Female', 'Male')) +
ggtitle(title) +
theme(legend.position = "bottom", text=element_text(size=12)) +
ylim(c(0, 0.165))
run('parkrun_analysis.r')
source('parkrun_analysis.r')
# Functions used ######################
CorrectTimeFormat <- function(s) {
mins <- substr(s, 1, 2)
mins <- as.numeric(mins)
secs <- substr(s, 4, 5)
secsInMins <- as.numeric(secs)/60
return (mins+secsInMins)
}
LoadAndCleanParkrunResults <- function(filename) {
# Load CSV to dataframe
df <- read.csv(filename)
df <- na.omit(df)
# Convert Grade to numbers
gradeNoPC <- gsub(" %", "", df$Grade)
grade <- as.numeric(gradeNoPC)
df$Grade <- grade
# Convert time factor to minutes (numeric)
df$Time <- CorrectTimeFormat(df$Time)
return(df)
}
# Analysing my own time ######################
# Load my own data
david <- read.csv('Parkrun - David_stats.csv')
# Only select runs where I was running alone! (i.e. my speed...)
david <- david[c(1,2,4,5,7,8,9),]
# Convert run dates into correct date format
david$Run.Date <- as.Date(david$Run.Date, '%d/%m/%Y')
# Convert times into numerics (in minutes)
david$Time <- CorrectTimeFormat(david$Time)
# Plot run date against time
png("david_scatter.png",height=400,width=600)
ggplot(david, aes(x=Run.Date, y=Time, color=Event)) +
geom_point(shape=20, size=7) +
labs(x="Run date", y="Run time (minutes)") +
ggtitle("5km Parkrun results") +
ylim(c(22, 24)) +
theme(legend.position = "bottom", text=element_text(size=12))
dev.off()
# Split into Finsbury and Southwark datasets of times only
finsbury.times <- david[david$Event=='Finsbury parkrun',]$Time
southwark.times <- david[david$Event=='Southwark parkrun',]$Time
# Do a t-test
t.test(finsbury.times,
southwark.times,
var.equal=TRUE, paired=FALSE)
# Comparing Southwark and Finsbury Park ######################
finsbury.results <- LoadAndCleanParkrunResults(filename = 'Parkrun - Fns_2015_01_10.csv')
southwark.results <- LoadAndCleanParkrunResults(filename = 'Parkrun - Sth_2015_01_10.csv')
# Find summary statistics
summary(finsbury.results$Time)
summary(southwark.results$Time)
# Plot gender splits
require(gridExtra)
png("male_female_split.png",height=400,width=800)
title = 'Finsbury Park'
plot1 <- ggplot(finsbury.results, aes(x=Time, fill=X)) +
geom_density(alpha=0.5) +
labs(x="Run time (minutes)", y="Density") +
scale_fill_discrete(name='Gender', labels=c('Female', 'Male')) +
ggtitle(title) +
theme(legend.position = "bottom", text=element_text(size=12)) +
ylim(c(0, 0.165))
title = 'Southwark'
plot2 <- ggplot(southwark.results, aes(x=Time, fill=X)) +
geom_density(alpha=0.5) +
labs(x="Run time (minutes)", y="Density") +
scale_fill_discrete(name='Gender', labels=c('Female', 'Male')) +
ggtitle(title) +
theme(legend.position = "bottom", text=element_text(size=12)) +
ylim(c(0, 0.165))
grid.arrange(plot1, plot2, ncol=2)
dev.off()
# Take males only
finsbury.results.male <- finsbury.results[finsbury.results$X=='M',]
southwark.results.male <- southwark.results[southwark.results$X=='M',]
# Plot age splits
# Sum up by age category
f_cat <- data.frame ( summary(finsbury.results.male$Cat) )
s_cat <- data.frame ( summary(southwark.results.male$Cat) )
# Add in course name
f_cat$Course = 'Finsbury Park'
s_cat$Course = 'Southwark'
# Add in age as a column
f_cat$age = rownames(f_cat)
s_cat$age = rownames(s_cat)
# Make sure both have same col names
colnames(f_cat) <- c('count', 'Course', 'age')
colnames(s_cat) <- c('count', 'Course', 'age')
# Convert to percentages
f_cat$count <- round(prop.table(f_cat[,1]),3)
s_cat$count <- round(prop.table(s_cat[,1]),3)
# Make sure both have same col names (again!)
colnames(f_cat) <- c('count', 'Course', 'age')
colnames(s_cat) <- c('count', 'Course', 'age')
# Remove any rows with 0
s_cat <- s_cat[s_cat$count!=0,]
f_cat <- f_cat[f_cat$count!=0,]
# Merge vertically
age.splits <- rbind(f_cat, s_cat)
png("age_split_of_males.png",height=500,width=800)
ggplot(age.splits, aes(x=factor(age),
y=count,
fill=Course)) +
geom_bar(stat='identity',
position='dodge',
width=0.8) +
labs(x="Age category", y="Proportion of runners") +
ggtitle("Age split of male runners at both Finsbury Park and Southwark (by %)") +
theme(legend.position = "bottom",
text=element_text(size=16),
axis.text.x = element_text(angle = 90, hjust = 1))
dev.off()
# Do a t-test
t.test(finsbury.results.male$Time,
southwark.results.male$Time,
var.equal=TRUE,
paired=FALSE)
# Analysing pre and post Christmas results ######################
# Load in Finsbury Park between subjects data
f256.results <- LoadAndCleanParkrunResults(filename = 'Parkrun - F256.csv') #20th
f260.results <- LoadAndCleanParkrunResults(filename = 'Parkrun - F260.csv') #3rd
# Load in Southwark between subjects data
s68.results <- LoadAndCleanParkrunResults(filename = 'Parkrun - S68.csv') #20th Dec
s71.results <- LoadAndCleanParkrunResults(filename = 'Parkrun - S71.csv') #3rd Jan
# Total number of runners in 20th Dec / 3rd Jan races
runner.total <- ( dim(s68.results) + dim(s71.results) + dim(f256.results) + dim(f260.results) )[1]
paste("Total runners:", runner.total)
# Running both races
f256.results$Course = 'Finsbury Park'
f260.results$Course = 'Finsbury Park'
s68.results$Course = 'Southwark'
s71.results$Course = 'Southwark'
dec20.results <- rbind(f256.results, s68.results)
jan3.results <- rbind(f260.results, s71.results)
joinedByRunner <- merge(dec20.results, jan3.results, by=c('parkrunner','Course'))
joinedByRunner <- joinedByRunner[,c('Course','Time.x', 'Time.y', 'X.x')]
colnames(joinedByRunner) <- c('Course', 'Pre.Christmas', 'Post.Christmas', 'Gender')
# Plot chart of correlation
png("prepost_xmas.png",height=500,width=500)
ggplot(joinedByRunner, aes(x=Pre.Christmas, y=Post.Christmas)) +
geom_point(shape=20, size=7) +
labs(x="Pre Christmas time in minutes (20th Dec)", y="Post Christmas time in minutes (3rd Jan)") +
ggtitle("Pre and Post Christmas run timings for 5km") +
theme(legend.position = "bottom", text=element_text(size=12)) +
geom_abline(intercept = 0)
dev.off()
# Plot chart of residuals
joinedByRunner$Improvement <- joinedByRunner$Pre.Christmas - joinedByRunner$Post.Christmas
png("prepost_residuals.png",height=500,width=500)
ggplot(joinedByRunner, aes(x=Pre.Christmas, y=Improvement)) +
geom_point(shape=20, size=7) +
labs(x="Pre Christmas time (20th Dec)", y="Improvement in time") +
ggtitle("Improvement (or worsening) of run time over Christmas period") +
theme(legend.position = "bottom", text=element_text(size=12)) +
geom_abline(intercept = 0, slope=0)
dev.off()
png("prepost_residuals_coursecolor.png",height=550,width=500)
ggplot(joinedByRunner, aes(x=Pre.Christmas, y=Improvement, color=Course)) +
geom_point(shape=20, size=7) +
labs(x="Pre Christmas time (20th Dec)", y="Improvement in time") +
ggtitle("Improvement (or worsening) of run time over Christmas period") +
theme(legend.position = "bottom", text=element_text(size=12)) +
geom_abline(intercept = 0)
dev.off()
# Paired t-test (everyone)
paste("Paired t-test using Southwark and F.Park")
t.test(joinedByRunner$Pre.Christmas,
joinedByRunner$Post.Christmas,
var.equal=TRUE,
paired=TRUE)
# Paired t-test (Finsbury only)
paste("Paired t-test using F.Park only")
t.test(joinedByRunner[joinedByRunner$Course=='Finsbury Park',]$Pre.Christmas,
joinedByRunner[joinedByRunner$Course=='Finsbury Park',]$Post.Christmas,
var.equal=TRUE,
paired=TRUE)
# Paired t-test (Southwark)
paste("Paired t-test using Southwark only")
t.test(joinedByRunner[joinedByRunner$Course=='Southwark',]$Pre.Christmas,
joinedByRunner[joinedByRunner$Course=='Southwark',]$Post.Christmas,
var.equal=TRUE,
paired=TRUE)
source('parkrun_analysis.r')
getwd()
paste('Running script. See https://davidabelman.wordpress.com/2015/01/13/analysing-parkrun-data-using-r/ for blog post.')
source('parkrun_analysis.r')
